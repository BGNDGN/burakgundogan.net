{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n// Async thunk: kayıt isteği gönderme\nexport const registerUser = createAsyncThunk('register/registerUser', async (userData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post('/api/register', userData); // Backend API endpoint\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    // Hata mesajını döndür\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  }\n});\nconst registerSlice = createSlice({\n  name: 'register',\n  initialState: {\n    user: null,\n    loading: false,\n    error: null,\n    success: false\n  },\n  reducers: {\n    clearRegisterState: state => {\n      state.loading = false;\n      state.error = null;\n      state.success = false;\n      state.user = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(registerUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n      state.success = false;\n    }).addCase(registerUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload;\n      state.success = true;\n    }).addCase(registerUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      state.success = false;\n    });\n  }\n});\nexport const {\n  clearRegisterState\n} = registerSlice.actions;\nexport default registerSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","registerUser","userData","rejectWithValue","response","post","data","error","_error$response","message","registerSlice","name","initialState","user","loading","success","reducers","clearRegisterState","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["C:/Users/burak/Desktop/abc/src/redux/slices/registerSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\n// Async thunk: kayıt isteği gönderme\r\nexport const registerUser = createAsyncThunk(\r\n  'register/registerUser',\r\n  async (userData, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post('/api/register', userData); // Backend API endpoint\r\n      return response.data;\r\n    } catch (error) {\r\n      // Hata mesajını döndür\r\n      return rejectWithValue(error.response?.data || error.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst registerSlice = createSlice({\r\n  name: 'register',\r\n  initialState: {\r\n    user: null,\r\n    loading: false,\r\n    error: null,\r\n    success: false,\r\n  },\r\n  reducers: {\r\n    clearRegisterState: (state) => {\r\n      state.loading = false;\r\n      state.error = null;\r\n      state.success = false;\r\n      state.user = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(registerUser.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n        state.success = false;\r\n      })\r\n      .addCase(registerUser.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.user = action.payload;\r\n        state.success = true;\r\n      })\r\n      .addCase(registerUser.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n        state.success = false;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { clearRegisterState } = registerSlice.actions;\r\nexport default registerSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,YAAY,GAAGF,gBAAgB,CAC1C,uBAAuB,EACvB,OAAOG,QAAQ,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACvC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,eAAe,EAAEH,QAAQ,CAAC,CAAC,CAAC;IAC9D,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACd;IACA,OAAOL,eAAe,CAAC,EAAAK,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;EAC/D;AACF,CACF,CAAC;AAED,MAAMC,aAAa,GAAGZ,WAAW,CAAC;EAChCa,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACZC,IAAI,EAAE,IAAI;IACVC,OAAO,EAAE,KAAK;IACdP,KAAK,EAAE,IAAI;IACXQ,OAAO,EAAE;EACX,CAAC;EACDC,QAAQ,EAAE;IACRC,kBAAkB,EAAGC,KAAK,IAAK;MAC7BA,KAAK,CAACJ,OAAO,GAAG,KAAK;MACrBI,KAAK,CAACX,KAAK,GAAG,IAAI;MAClBW,KAAK,CAACH,OAAO,GAAG,KAAK;MACrBG,KAAK,CAACL,IAAI,GAAG,IAAI;IACnB;EACF,CAAC;EACDM,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACpB,YAAY,CAACqB,OAAO,EAAGJ,KAAK,IAAK;MACxCA,KAAK,CAACJ,OAAO,GAAG,IAAI;MACpBI,KAAK,CAACX,KAAK,GAAG,IAAI;MAClBW,KAAK,CAACH,OAAO,GAAG,KAAK;IACvB,CAAC,CAAC,CACDM,OAAO,CAACpB,YAAY,CAACsB,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MAClDN,KAAK,CAACJ,OAAO,GAAG,KAAK;MACrBI,KAAK,CAACL,IAAI,GAAGW,MAAM,CAACC,OAAO;MAC3BP,KAAK,CAACH,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC,CACDM,OAAO,CAACpB,YAAY,CAACyB,QAAQ,EAAE,CAACR,KAAK,EAAEM,MAAM,KAAK;MACjDN,KAAK,CAACJ,OAAO,GAAG,KAAK;MACrBI,KAAK,CAACX,KAAK,GAAGiB,MAAM,CAACC,OAAO;MAC5BP,KAAK,CAACH,OAAO,GAAG,KAAK;IACvB,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEE;AAAmB,CAAC,GAAGP,aAAa,CAACiB,OAAO;AAC3D,eAAejB,aAAa,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}