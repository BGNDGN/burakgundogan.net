{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const loginUser = createAsyncThunk('login/loginUser', async (userData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post('/api/login', userData);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message);\n  }\n});\nconst loginSlice = createSlice({\n  name: 'login',\n  initialState: {\n    user: null,\n    loading: false,\n    error: null,\n    success: false\n  },\n  reducers: {\n    clearLoginState: state => {\n      state.loading = false;\n      state.error = null;\n      state.success = false;\n      state.user = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(loginUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n      state.success = false;\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload.user;\n      state.success = true;\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      state.success = false;\n    });\n  }\n});\nexport const {\n  clearLoginState\n} = loginSlice.actions;\nexport default loginSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","loginUser","userData","rejectWithValue","response","post","data","error","_error$response","_error$response$data","message","loginSlice","name","initialState","user","loading","success","reducers","clearLoginState","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["C:/Users/burak/Desktop/abc/src/redux/slices/loginSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nexport const loginUser = createAsyncThunk(\r\n  'login/loginUser',\r\n  async (userData, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post('/api/login', userData);\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message || error.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst loginSlice = createSlice({\r\n  name: 'login',\r\n  initialState: {\r\n    user: null,\r\n    loading: false,\r\n    error: null,\r\n    success: false,\r\n  },\r\n  reducers: {\r\n    clearLoginState: (state) => {\r\n      state.loading = false;\r\n      state.error = null;\r\n      state.success = false;\r\n      state.user = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(loginUser.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n        state.success = false;\r\n      })\r\n      .addCase(loginUser.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.user = action.payload.user;\r\n        state.success = true;\r\n      })\r\n      .addCase(loginUser.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n        state.success = false;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { clearLoginState } = loginSlice.actions;\r\nexport default loginSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,SAAS,GAAGF,gBAAgB,CACvC,iBAAiB,EACjB,OAAOG,QAAQ,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACvC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,YAAY,EAAEH,QAAQ,CAAC;IACzD,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACd,OAAON,eAAe,CAAC,EAAAK,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBC,OAAO,KAAIH,KAAK,CAACG,OAAO,CAAC;EACxE;AACF,CACF,CAAC;AAED,MAAMC,UAAU,GAAGb,WAAW,CAAC;EAC7Bc,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,IAAI,EAAE,IAAI;IACVC,OAAO,EAAE,KAAK;IACdR,KAAK,EAAE,IAAI;IACXS,OAAO,EAAE;EACX,CAAC;EACDC,QAAQ,EAAE;IACRC,eAAe,EAAGC,KAAK,IAAK;MAC1BA,KAAK,CAACJ,OAAO,GAAG,KAAK;MACrBI,KAAK,CAACZ,KAAK,GAAG,IAAI;MAClBY,KAAK,CAACH,OAAO,GAAG,KAAK;MACrBG,KAAK,CAACL,IAAI,GAAG,IAAI;IACnB;EACF,CAAC;EACDM,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACrB,SAAS,CAACsB,OAAO,EAAGJ,KAAK,IAAK;MACrCA,KAAK,CAACJ,OAAO,GAAG,IAAI;MACpBI,KAAK,CAACZ,KAAK,GAAG,IAAI;MAClBY,KAAK,CAACH,OAAO,GAAG,KAAK;IACvB,CAAC,CAAC,CACDM,OAAO,CAACrB,SAAS,CAACuB,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MAC/CN,KAAK,CAACJ,OAAO,GAAG,KAAK;MACrBI,KAAK,CAACL,IAAI,GAAGW,MAAM,CAACC,OAAO,CAACZ,IAAI;MAChCK,KAAK,CAACH,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC,CACDM,OAAO,CAACrB,SAAS,CAAC0B,QAAQ,EAAE,CAACR,KAAK,EAAEM,MAAM,KAAK;MAC9CN,KAAK,CAACJ,OAAO,GAAG,KAAK;MACrBI,KAAK,CAACZ,KAAK,GAAGkB,MAAM,CAACC,OAAO;MAC5BP,KAAK,CAACH,OAAO,GAAG,KAAK;IACvB,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEE;AAAgB,CAAC,GAAGP,UAAU,CAACiB,OAAO;AACrD,eAAejB,UAAU,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}